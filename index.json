[{"content":"README: WSL2 + Ubuntu 22.04 + GPU + Docker + Proxy + Conda 目录 / Table of Contents 简介 / Introduction 安装并配置 WSL2 (Ubuntu 22.04) / Installing \u0026amp; Configuring WSL2 (Ubuntu 22.04) 启用 GPU 支持 / Enabling GPU Support 代理设置 / Proxy Configuration WSL 全局代理 / System-wide Proxy in WSL Docker 代理 / Docker Proxy Docker daemon.json “default” 字段与其他写法 / About “default” vs “http-proxy” in daemon.json 常见网络或 GPG Key 出错场景排查 / Common Network or GPG Key Errors 安装 Docker / Installing Docker 官方仓库安装 / Official Repo Installation 手动安装（离线或无法连接官方源） / Manual Installation (Offline or Repo Issues) 安装 Anaconda 并配置国内源 / Installing Anaconda \u0026amp; Configuring Mirrors Conda 国内源配置 / Conda Domestic Mirrors Pip 国内源配置 / Pip Domestic Mirrors Conda 与 Pip 源的区别 / Distinction between Conda and Pip Mirrors 创建大模型相关虚拟环境 / Creating LLM Virtual Environment 可选：安装 CUDA \u0026amp; cuDNN / (Optional) Installing CUDA \u0026amp; cuDNN 常见问题 / FAQ 总结 / Conclusion 简介 / Introduction 目标 / Goal\n在 Windows 11 上通过 WSL2 (Ubuntu 22.04) 搭建一个可用的 GPU、Docker、代理、Conda 等大模型开发环境。 使用宿主机（Windows）代理（如 Clash / V2Ray）在 WSL 中访问外网，包括 Docker 拉取镜像、Conda/Pip 安装包。 避免常见 GPG Key、网络、仓库 404 等错误，并提供手动安装方式。 范围 / Scope\n启用 GPU (NVIDIA) 支持 设置 WSL 系统级代理 设置 Docker 代理 安装 Docker（官方仓库 \u0026amp; 手动离线方式） 安装 Anaconda / Miniconda 配置国内镜像（Conda \u0026amp; Pip） （可选）安装 CUDA \u0026amp; cuDNN 安装并配置 WSL2 (Ubuntu 22.04) / Installing \u0026amp; Configuring WSL2 (Ubuntu 22.04) 启用 WSL2 / Enable WSL2\n在 Windows PowerShell (管理员权限) 中执行：\nwsl --install 安装完成后重启，再从 Microsoft Store 下载 Ubuntu 22.04。\n基础更新 / Basic Update\n在 Ubuntu 中：\nsudo apt-get update \u0026amp;\u0026amp; sudo apt-get upgrade -y 配置好用户名、密码。\n(可选) 启用 systemd / Enable systemd (Optional)\n编辑 /etc/wsl.conf： [boot] systemd=true 回到 Windows 命令行： wsl --shutdown wsl 现在 systemctl 可用了。 启用 GPU 支持 / Enabling GPU Support 安装 NVIDIA 驱动 / Install NVIDIA Driver on Windows 确保 Windows 上的 GPU 驱动与 CUDA for WSL2 兼容。 WSL 内验证 / Verify in WSL nvidia-smi 能看到 GPU 信息表示支持正常。 代理设置 / Proxy Configuration 1. WSL 全局代理 / System-wide Proxy in WSL 目的 / Goal: 让 WSL 内所有程序（apt-get, curl, conda, etc.）通过宿主机代理访问外网。\n查找宿主机网关 IP / Find Host Gateway IP\nip route | grep default 输出如 default via 172.17.176.1 dev eth0，则 172.17.176.1 为宿主机 IP。\n设置环境变量 / Set Environment Variables\n编辑 ~/.bashrc 或 ~/.zshrc：\nexport http_proxy=\u0026#34;http://172.17.176.1:7890\u0026#34; export https_proxy=\u0026#34;http://172.17.176.1:7890\u0026#34; export no_proxy=\u0026#34;localhost,127.0.0.1\u0026#34; 然后 source ~/.bashrc。\n测试 / Test\ncurl -I https://www.google.com 若返回 HTTP/1.1 200 OK，则代理可用。\n注意 / Note: 需要宿主机代理工具（Clash / V2Ray 等）开启 允许局域网访问。\n2. Docker 代理 / Docker Proxy 编辑或创建 /etc/docker/daemon.json\nsudo nano /etc/docker/daemon.json 写入以下配置 / Put the following content\n注意：有两种常见写法，\u0026quot;default\u0026quot;: { ... } 或 \u0026quot;http-proxy\u0026quot;: ...。\n如果你的 Docker 版本支持 \u0026quot;default\u0026quot; 字段： { \u0026#34;proxies\u0026#34;: { \u0026#34;default\u0026#34;: { \u0026#34;httpProxy\u0026#34;: \u0026#34;http://172.17.176.1:7890\u0026#34;, \u0026#34;httpsProxy\u0026#34;: \u0026#34;http://172.17.176.1:7890\u0026#34;, \u0026#34;noProxy\u0026#34;: \u0026#34;localhost,127.0.0.1\u0026#34; } } } 对于一些老版本 Docker 可能需要 \u0026quot;http-proxy\u0026quot; / \u0026quot;https-proxy\u0026quot; 而非 \u0026quot;default\u0026quot;： { \u0026#34;proxies\u0026#34;: { \u0026#34;http-proxy\u0026#34;: \u0026#34;http://172.17.176.1:7890\u0026#34;, \u0026#34;https-proxy\u0026#34;: \u0026#34;http://172.17.176.1:7890\u0026#34;, \u0026#34;no-proxy\u0026#34;: \u0026#34;localhost,127.0.0.1\u0026#34; } } 重启 Docker / Restart Docker\nsudo systemctl daemon-reload sudo systemctl restart docker 或者如果未启用 systemd：\nsudo service docker restart 验证 / Verify\ndocker info | grep -i proxy docker pull hello-world 若成功拉取镜像，说明代理生效。\nDocker daemon.json “default” 字段与其他写法 / About “default” vs “http-proxy” in daemon.json 新版本 Docker 通常支持： \u0026#34;proxies\u0026#34;: { \u0026#34;default\u0026#34;: { ... } } 部分版本 Docker 仅支持： \u0026#34;proxies\u0026#34;: { \u0026#34;http-proxy\u0026#34;: \u0026#34;http://...\u0026#34;, \u0026#34;https-proxy\u0026#34;: \u0026#34;http://...\u0026#34;, \u0026#34;no-proxy\u0026#34;: \u0026#34;...\u0026#34; } 如果看到 “the following directives are specified but not recognized” 或 “Failed to start Docker Application Container Engine” 日志，请切换另一种写法并重启 Docker。 3. 常见网络或 GPG Key 出错场景排查 / Common Network or GPG Key Errors 3.1 “Could not handshake: Error in the pull function.” 可能网络或代理配置不对，导致无法访问 https://download.docker.com。 请先 curl -I https://download.docker.com/linux/ubuntu/dists/jammy/InRelease 测试是否可访问。 3.2 “NO_PUBKEY 7EA0A9C3F273FCD8” / “GPG error: The repository is not signed.” Docker 官方 GPG Key 未正确导入或失效。 需要重新下载并 sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg。 3.3 “Package docker-ce is not available” / “E: Unable to locate package docker-ce-cli” 可能是更新源失败、网络代理问题、或 Docker 源未添加成功。 手动查看 /etc/apt/sources.list.d/docker.list 是否正确，或者转为 手动安装 Docker。 安装 Docker / Installing Docker 1. 官方仓库安装 / Official Repo Installation 前提：代理可用，Docker 源可正常访问。\n依赖 / Dependencies sudo apt-get update sudo apt-get install -y ca-certificates curl gnupg lsb-release 导入 GPG Key / GPG Key sudo mkdir -p /etc/apt/keyrings curl -fsSL https://download.docker.com/linux/ubuntu/gpg \\ | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg 添加 Docker 源 / Repo echo \\ \u0026#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \\ https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\u0026#34; \\ | sudo tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null 更新并安装 / Update \u0026amp; Install sudo apt-get update sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin 验证 / Verify sudo systemctl start docker docker --version docker compose version 2. 手动安装（离线或无法连接官方源） / Manual Installation (Offline or Repo Issues) 下载 .deb 包 / Download .deb\n从 Docker Releases (Ubuntu) 下载： docker-ce_\u0026lt;version\u0026gt;.deb docker-ce-cli_\u0026lt;version\u0026gt;.deb containerd.io_\u0026lt;version\u0026gt;.deb docker-compose-plugin_\u0026lt;version\u0026gt;.deb (可选) 放进 WSL / Copy into WSL\n将下载好的文件放入 /mnt/... 或直接下载到 Linux 路径。 安装 / Install sudo dpkg -i containerd.io_\u0026lt;version\u0026gt;.deb sudo dpkg -i docker-ce-cli_\u0026lt;version\u0026gt;.deb sudo dpkg -i docker-ce_\u0026lt;version\u0026gt;.deb sudo dpkg -i docker-compose-plugin_\u0026lt;version\u0026gt;.deb 启动 \u0026amp; 测试 / Start \u0026amp; Test sudo service docker start docker pull hello-world 安装 Anaconda 并配置国内源 / Installing Anaconda \u0026amp; Configuring Mirrors 下载并安装 Anaconda / Download \u0026amp; Install\ncd ~ wget https://repo.anaconda.com/archive/Anaconda3-2023.07-2-Linux-x86_64.sh -O anaconda.sh chmod +x anaconda.sh ./anaconda.sh 安装时选择 yes 初始化 conda init，或手动：\nconda init bash source ~/.bashrc 验证 / Verify\nconda --version conda update --all 1. Conda 国内源配置 / Conda Domestic Mirrors 切勿将 pypi/simple 源错误地添加到 Conda channels，否则会报 404。\nconda config --set show_channel_urls yes # 以下示例以清华镜像为主, 其他如中科大/阿里可自行添加 conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2 conda config --set channel_priority flexible 2. Pip 国内源配置 / Pip Domestic Mirrors pip 的镜像源应写在 ~/.pip/pip.conf：\nmkdir -p ~/.pip nano ~/.pip/pip.conf 示例（清华、阿里、USTC）：\n[global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple extra-index-url = https://mirrors.aliyun.com/pypi/simple https://pypi.mirrors.ustc.edu.cn/simple [install] trusted-host = pypi.tuna.tsinghua.edu.cn mirrors.aliyun.com pypi.mirrors.ustc.edu.cn 3. Conda 与 Pip 源的区别 / Distinction between Conda and Pip Mirrors Conda Channels：只适用于 conda install。 Pip Mirrors：只适用于 pip install。 切勿将 pypi/simple 作为 conda channel，否则会报错。 创建大模型相关虚拟环境 / Creating LLM Virtual Environment 创建并激活环境 conda create -n llm python=3.12 -y conda activate llm 安装常用库 # 科学计算 conda install scikit-learn -y # 大模型相关 pip install transformers huggingface_hub modelscope langchain peft (可选) 安装 PyTorch GPU 等 conda install pytorch torchvision torchaudio pytorch-cuda=12.2 -c pytorch -c nvidia 可选：安装 CUDA \u0026amp; cuDNN / (Optional) Installing CUDA \u0026amp; cuDNN 1. Conda 环境内安装 (推荐只做深度学习推理) conda install -c nvidia cudatoolkit conda install -c conda-forge cudnn 2. 系统级安装 (需要 nvcc 编译) 在 Ubuntu (WSL) 中添加 CUDA 仓库并安装 安装 cuDNN（需登陆 NVIDIA 官网或下载 .deb 并解压到 /usr/local）。 常见问题 / FAQ WSL 无法访问外网 检查代理是否允许 LAN 访问、WSL 中 IP 是否正确、环境变量是否设置正确。 Docker 拉取镜像超时 / 失败 检查 /etc/docker/daemon.json 中代理配置；重启 Docker 并查看 docker info | grep -i proxy。 无法安装 Docker（NO_PUBKEY / 404） 重新导入 GPG Key；或使用手动下载 .deb 包的安装方式。 Conda 404 / pip 404 确保不要把 pypi 镜像源当作 conda channel；Conda 与 Pip 源分别配置。 默认 Docker daemon.json 中 “default” 字段无效 改用 \u0026quot;http-proxy\u0026quot; / \u0026quot;https-proxy\u0026quot; 字段。 Systemd 未启动 编辑 /etc/wsl.conf 开启 systemd 或手动用 sudo service docker start 启动 Docker。 总结 / Conclusion 通过以上步骤，你可以在 Windows 11 + WSL2(Ubuntu 22.04) 环境中：\n使用 GPU 进行加速，例如深度学习推理或训练。 在 WSL 内使用宿主机代理，包括 Docker 代理。 安装并运行 Docker，解决网络或 GPG Key 问题。 安装 Anaconda/Miniconda 并配置国内镜像，创建大模型相关虚拟环境。 （可选）在系统级或 Conda 环境内安装 CUDA \u0026amp; cuDNN。 祝使用顺利！\nHappy WSL2 + Docker + Conda + Proxy + GPU Development!\n","permalink":"https://AquariniqueMu.github.io/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/","summary":"\u003ch1 id=\"readme-wsl2--ubuntu-2204--gpu--docker--proxy--conda\"\u003eREADME: WSL2 + Ubuntu 22.04 + GPU + Docker + Proxy + Conda\u003c/h1\u003e\n\u003ch2 id=\"目录--table-of-contents\"\u003e目录 / Table of Contents\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#%e7%ae%80%e4%bb%8b--introduction\"\u003e简介 / Introduction\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#%e5%ae%89%e8%a3%85%e5%b9%b6%e9%85%8d%e7%bd%ae-wsl2-ubuntu-2204--installing--configuring-wsl2-ubuntu-2204\"\u003e安装并配置 WSL2 (Ubuntu 22.04) / Installing \u0026amp; Configuring WSL2 (Ubuntu 22.04)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#%e5%90%af%e7%94%a8-gpu-%e6%94%af%e6%8c%81--enabling-gpu-support\"\u003e启用 GPU 支持 / Enabling GPU Support\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#%e4%bb%a3%e7%90%86%e8%ae%be%e7%bd%ae--proxy-configuration\"\u003e代理设置 / Proxy Configuration\u003c/a\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#wsl-%e5%85%a8%e5%b1%80%e4%bb%a3%e7%90%86--system-wide-proxy-in-wsl\"\u003eWSL 全局代理 / System-wide Proxy in WSL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#docker-%e4%bb%a3%e7%90%86--docker-proxy\"\u003eDocker 代理 / Docker Proxy\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#docker-daemonjson-default-%e5%ad%97%e6%ae%b5%e4%b8%8e%e5%85%b6%e4%bb%96%e5%86%99%e6%b3%95--about-default-vs-http-proxy-in-daemonjson\"\u003eDocker \u003ccode\u003edaemon.json\u003c/code\u003e “default” 字段与其他写法 / About “default” vs “http-proxy” in \u003ccode\u003edaemon.json\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#%e5%b8%b8%e8%a7%81%e7%bd%91%e7%bb%9c%e6%88%96-gpg-key-%e5%87%ba%e9%94%99%e5%9c%ba%e6%99%af%e6%8e%92%e6%9f%a5--common-network-or-gpg-key-errors\"\u003e常见网络或 GPG Key 出错场景排查 / Common Network or GPG Key Errors\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#%e5%ae%89%e8%a3%85-docker--installing-docker\"\u003e安装 Docker / Installing Docker\u003c/a\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#%e5%ae%98%e6%96%b9%e4%bb%93%e5%ba%93%e5%ae%89%e8%a3%85--official-repo-installation\"\u003e官方仓库安装 / Official Repo Installation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#%e6%89%8b%e5%8a%a8%e5%ae%89%e8%a3%85%e7%a6%bb%e7%ba%bf%e6%88%96%e6%97%a0%e6%b3%95%e8%bf%9e%e6%8e%a5%e5%ae%98%e6%96%b9%e6%ba%90--manual-installation-offline-or-repo-issues\"\u003e手动安装（离线或无法连接官方源） / Manual Installation (Offline or Repo Issues)\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#%e5%ae%89%e8%a3%85-anaconda-%e5%b9%b6%e9%85%8d%e7%bd%ae%e5%9b%bd%e5%86%85%e6%ba%90--installing-anaconda--configuring-mirrors\"\u003e安装 Anaconda 并配置国内源 / Installing Anaconda \u0026amp; Configuring Mirrors\u003c/a\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#conda-%e5%9b%bd%e5%86%85%e6%ba%90%e9%85%8d%e7%bd%ae--conda-domestic-mirrors\"\u003eConda 国内源配置 / Conda Domestic Mirrors\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#pip-%e5%9b%bd%e5%86%85%e6%ba%90%e9%85%8d%e7%bd%ae--pip-domestic-mirrors\"\u003ePip 国内源配置 / Pip Domestic Mirrors\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#conda-%e4%b8%8e-pip-%e6%ba%90%e7%9a%84%e5%8c%ba%e5%88%ab--distinction-between-conda-and-pip-mirrors\"\u003eConda 与 Pip 源的区别 / Distinction between Conda and Pip Mirrors\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#%e5%88%9b%e5%bb%ba%e5%a4%a7%e6%a8%a1%e5%9e%8b%e7%9b%b8%e5%85%b3%e8%99%9a%e6%8b%9f%e7%8e%af%e5%a2%83--creating-llm-virtual-environment\"\u003e创建大模型相关虚拟环境 / Creating LLM Virtual Environment\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#%e5%8f%af%e9%80%89%e5%ae%89%e8%a3%85-cuda--cudnn--optional-installing-cuda--cudnn\"\u003e可选：安装 CUDA \u0026amp; cuDNN / (Optional) Installing CUDA \u0026amp; cuDNN\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#%e5%b8%b8%e8%a7%81%e9%97%ae%e9%a2%98--faq\"\u003e常见问题 / FAQ\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/posts/codingbook-%E4%BB%8E0%E5%88%B01%E5%BB%BA%E8%AE%BE%E4%B8%80%E4%B8%AAwsl-ubuntu%E7%B3%BB%E7%BB%9F/#%e6%80%bb%e7%bb%93--conclusion\"\u003e总结 / Conclusion\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003chr\u003e\n\u003ch2 id=\"简介--introduction\"\u003e简介 / Introduction\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e目标 / Goal\u003c/strong\u003e\u003c/p\u003e","title":"CodingBook：从0到1建设一个WSL Ubuntu系统"},{"content":"微博用户爬虫项目 本项目是一个用于批量抓取微博用户微博数据的爬虫工具，支持从Excel文件中读取用户ID，抓取指定时间范围内的微博内容、图片等信息，并将结果保存到本地。现在，我们已经将项目封装为Docker容器，并开放了一个API接口，方便他人部署和使用。\n地址：https://github.com/AquariniqueMu/WeiboUserCrawler\n目录 项目结构 环境依赖 配置文件 config.py 运行爬虫 1. 使用Docker部署和运行 1.1 构建Docker镜像 1.2 运行Docker容器 1.3 调用API接口 1.4 查看结果 2. 直接运行Python脚本 2.1 抓取单个用户微博数据 2.2 批量抓取多个用户微博数据 数据存储 注意事项 项目文件详解 常见问题 联系方式 免责声明 requirements.txt 项目结构 WeiboUserCrawler/ ├── app.py ├── config.py ├── Dockerfile ├── main_from_xlsx.py ├── main_single_user.py ├── requirements.txt ├── utils.py ├── weibo.py └── weibo_results/ (empty, will be populated during runtime) app.py：Flask应用入口，提供API接口。 config.py：配置文件，包含默认参数。 Dockerfile：Docker镜像构建文件。 main_from_xlsx.py：从Excel文件中读取用户ID，批量抓取微博数据的脚本。 main_single_user.py：抓取单个用户微博数据的脚本。 requirements.txt：Python依赖库列表。 utils.py：工具函数，包含数据类型处理和日期转换等功能。 weibo.py：微博爬虫核心代码，定义了WeiboCrawler类。 weibo_results/：默认的数据保存目录，抓取的结果会存储在此文件夹中。 项目下载 git clone https://github.com/AquariniqueMu/WeiboUserCrawler.git cd WeiboUserCrawler 环境依赖 Python 版本：3.12.5\n依赖库：\nrequests\u0026gt;=2.31.0 pandas\u0026gt;=2.0.3 tqdm\u0026gt;=4.65.0 openpyxl\u0026gt;=3.1.2 Flask\u0026gt;=2.0.3 可使用以下命令安装依赖：\npip install -r requirements.txt 配置文件 config.py 在使用爬虫前，需要配置config.py文件，包括Cookie、抓取时间范围等。\nfrom utils import convert_date_to_timestamp # 默认的Cookie，可在运行时通过API传入 cookie = \u0026#34;\u0026#34; result_dir = \u0026#39;./weibo_results\u0026#39; start_date = convert_date_to_timestamp(\u0026#39;2023-01-01\u0026#39;) # 开始时间，格式：YYYY-MM-DD end_date = convert_date_to_timestamp(\u0026#39;2023-12-31\u0026#39;) # 结束时间，格式：YYYY-MM-DD download_images = True # 是否下载图片 fetch_reposts = True # 是否抓取转发微博 运行爬虫 1. 使用Docker部署和运行 通过Docker容器化，您可以轻松地在任何支持Docker的环境中部署和运行本项目。\n1.1 构建Docker镜像 在项目根目录下，执行以下命令构建Docker镜像：\ndocker build -t weibo-crawler . 1.2 运行Docker容器 使用以下命令运行Docker容器，并将结果目录映射到宿主机：\ndocker run -d -p 5000:5000 -v /your/host/path/weibo_results:/app/weibo_results --name weibo-crawler weibo-crawler -d：以守护进程方式运行容器。 -p 5000:5000：将容器内的5000端口映射到宿主机的5000端口。 -v /your/host/path/weibo_results:/app/weibo_results：将宿主机的目录映射到容器内的/app/weibo_results，用于数据持久化。 --name weibo-crawler：为容器指定一个名称，方便管理。 **注意：**请将/your/host/path/weibo_results替换为您宿主机上用于存放结果的实际路径。\n1.3 调用API接口 使用curl命令或其他HTTP客户端（如Postman）发送POST请求：\ncurl -X POST http://localhost:5000/crawl \\ -H \u0026#34;Content-Type: application/json\u0026#34; \\ -d \u0026#39;{ \u0026#34;user_id\u0026#34;: \u0026#34;1234567890\u0026#34;, \u0026#34;cookie\u0026#34;: \u0026#34;YOUR_COOKIE_HERE\u0026#34;, \u0026#34;start_date\u0026#34;: \u0026#34;2023-01-01\u0026#34;, \u0026#34;end_date\u0026#34;: \u0026#34;2023-12-31\u0026#34;, \u0026#34;download_images\u0026#34;: true, \u0026#34;fetch_reposts\u0026#34;: true }\u0026#39; 参数说明：\nuser_id：必填，微博用户ID。 cookie：必填，您的微博Cookie。 start_date：选填，开始日期，格式YYYY-MM-DD。 end_date：选填，结束日期，格式YYYY-MM-DD。 download_images：选填，是否下载图片，默认为false。 fetch_reposts：选填，是否抓取转发微博，默认为false。 示例响应：\n{ \u0026#34;message\u0026#34;: \u0026#34;Started crawling for user 1234567890\u0026#34; } 1.4 查看结果 抓取的结果会保存在宿主机的/your/host/path/weibo_results目录下，以用户ID命名的子目录中。\n查看容器日志：\ndocker logs -f weibo-crawler 停止容器：\ndocker stop weibo-crawler 启动容器：\ndocker start weibo-crawler 删除容器：\ndocker rm weibo-crawler 2. 直接运行Python脚本 如果您希望在本地直接运行Python脚本，可以按照以下步骤操作。\n2.1 抓取单个用户微博数据 修改main_single_user.py中的user_id为目标用户的ID，然后运行该脚本。\nfrom weibo import WeiboCrawler from config import cookie, result_dir, start_date, end_date, download_images, fetch_reposts def run_weibo_crawler(): user_id = \u0026#39;1234567890\u0026#39; # 替换为目标用户的ID cookie = \u0026#39;YOUR_COOKIE_HERE\u0026#39; # 替换为你的Cookie config = { \u0026#39;user_id\u0026#39;: user_id, \u0026#39;cookie\u0026#39;: cookie, \u0026#39;result_dir\u0026#39;: result_dir, \u0026#39;start_date\u0026#39;: start_date, \u0026#39;end_date\u0026#39;: end_date, \u0026#39;download_images\u0026#39;: download_images, \u0026#39;fetch_reposts\u0026#39;: fetch_reposts, } print(\u0026#34;=\u0026#34;*50 + \u0026#34; Start Weibo Crawler \u0026#34; + \u0026#34;=\u0026#34;*50 + \u0026#34;\\n\u0026#34;) weibo_crawler = WeiboCrawler(config) weibo_crawler.start() print(\u0026#34;\\n\u0026#34; + \u0026#34;=\u0026#34;*50 + \u0026#34; End Weibo Crawler \u0026#34; + \u0026#34;=\u0026#34;*50) if __name__ == \u0026#34;__main__\u0026#34;: run_weibo_crawler() 运行命令：\npython main_single_user.py 2.2 批量抓取多个用户微博数据 将用户ID列表保存在Excel文件中，然后运行main_from_xlsx.py。\n准备Excel文件\n创建一个Excel文件（默认文件名：user_ids.xlsx）。 在第一列（默认列名：用户ID）中填写用户ID列表。 运行脚本\npython main_from_xlsx.py --excel_file your_excel_file.xlsx --id_column 用户ID --excel_file：Excel文件路径，默认值为user_ids.xlsx。 --id_column：用户ID列名，默认值为用户ID。 示例：\npython main_from_xlsx.py 如果使用默认的文件名和列名，可以直接运行上述命令。\n数据存储 所有抓取的结果会存储在weibo_results/目录下。 每个用户的数据会存放在以用户ID命名的子目录中。 数据包括： 微博内容CSV文件：weibo_用户ID.csv 图片文件：存储在对应微博ID的images/目录下。 注意事项 合法性与合规性 请遵守微博的服务条款和相关法律法规。 本工具仅供学习和研究使用，禁止用于任何商业或非法用途。 请勿过度抓取，以免给微博服务器带来压力。 关于Cookie 安全性：Cookie包含敏感信息，请妥善保管，避免泄露。 时效性：Cookie可能会过期，若爬虫无法正常工作，请尝试更新Cookie。 请求频率 为避免触发微博的反爬机制，程序中已设置了随机等待时间。 如需调整，请在weibo.py的start方法中修改time.sleep的参数。 多线程与并发 Docker部署的API接口中，每个爬虫任务在一个新线程中运行。 如果并发请求过多，可能会导致资源耗尽。 建议在app.py中增加任务队列或并发控制机制，限制同时运行的爬虫任务数量。 项目文件详解 app.py Flask应用入口，提供了/crawl POST接口。 功能： 接收请求参数：user_id、cookie、start_date、end_date等。 启动一个新线程运行爬虫，避免阻塞API响应。 返回JSON格式的响应，告知请求已开始处理。 weibo.py 核心爬虫代码，定义了WeiboCrawler类。 功能： 构造请求，获取微博数据。 解析微博内容、用户信息、图片等。 支持长微博处理，获取完整内容。 可选择下载微博中的图片。 utils.py 工具函数，包含： datatype_process：数据类型转换，处理常见的数据格式。 convert_date_to_timestamp：将日期字符串转换为时间戳。 config.py 配置文件，包含全局配置参数。 在Docker部署中，cookie和user_id等参数通过API接口传入。 main_single_user.py 主程序，抓取单个用户的微博数据。 使用示例中，替换user_id和cookie为目标用户信息即可。 main_from_xlsx.py 主程序，批量抓取多个用户的微博数据。 从指定的Excel文件中读取用户ID列表。 requirements.txt Python依赖库列表，可使用pip install -r requirements.txt安装。 Dockerfile Docker镜像构建文件。 指定了基础镜像、工作目录、依赖安装和启动命令。 weibo_results/ 数据保存目录。 程序运行后会自动创建，存储抓取的微博数据和图片。 常见问题 1. 爬虫无法抓取数据，提示Cookie错误 可能是Cookie过期，请重新获取并更新config.py中的cookie变量，或在API请求中传入最新的Cookie。 2. 运行程序时出现SSL错误 可能是网络问题或请求频率过高导致。 尝试降低请求频率，或在weibo.py中调整verify=False来忽略SSL验证（仅用于调试，不推荐长期使用）。 3. 如何获取用户ID 打开微博用户主页，浏览器地址栏中的一串数字即为用户ID。 也可以通过在线工具或API转换用户名为用户ID。 4. Docker容器无法启动或运行异常 请确保Docker已正确安装并正在运行。 检查Dockerfile和docker run命令的参数是否正确。 查看容器日志以获取更多错误信息：docker logs -f weibo-crawler 联系方式 如有问题或建议，欢迎联系项目作者。\n作者：Junwen Yang 邮箱：lucas.junwen.yang@gmail.com 免责声明 本项目仅供学习和研究使用，禁止用于任何商业或非法用途。 使用本工具产生的任何风险和后果由用户自行承担，作者不承担任何责任。 ","permalink":"https://AquariniqueMu.github.io/posts/%E5%BE%AE%E5%8D%9A%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E6%8A%93%E5%8F%96%E6%89%8B%E5%86%8C/","summary":"\u003ch1 id=\"微博用户爬虫项目\"\u003e微博用户爬虫项目\u003c/h1\u003e\n\u003cp\u003e本项目是一个用于批量抓取微博用户微博数据的爬虫工具，支持从Excel文件中读取用户ID，抓取指定时间范围内的微博内容、图片等信息，并将结果保存到本地。现在，我们已经将项目封装为Docker容器，并开放了一个API接口，方便他人部署和使用。\u003c/p\u003e","title":"微博用户信息抓取手册"},{"content":"2024/03/16 update：为方便后续的一些实验和工作，实验室的DELL Precision T3660服务器系统更换为Ubuntu 20.04。这里简单介绍一下服务器的远程连接与使用。\n一、远程连接 方法一：TODESK 比较简单的方法是下载todesk软件远程操控桌面，只需要主机的设备代码和密码即可\n方法二：VSCode + Remote SSH 前置工作：\n检查自己的电脑是否打开OpenSSH服务，在服务界面可以查找。或者在cmd窗口输入以下命令：\nnet stop sshd net start sshd 重启ssh服务即可\n下载vscode\nDownload Visual Studio Code - Mac, Linux, Windows\n安装Remote SSH扩展\nctrl+shift+P打开vscode的选项面板，输入Remote SSH，选择下面的Remote SSH：Connect to Host\n接着选择二级列表的Configure SSH Hosts，并点击第一项\n进入config文件后，输入下面的内容：\nHost AAAAAAAAA HostName BBB.BBB.BBB.BBB User CCC Port DDD 在左侧remote ssh面板下选择你的Host，直接打开或创建新窗口。首次打开选择 Linux系统 - 并输入密码：\n打开后选择open folder即可选择要打开的文件夹：\n如果连接一会儿后断开，可能是因为没有配置ssh_config文件，尝试下面的教程：\n解决Windows 自带 OpenSSH 连接到 Linux 服务器时，一段时间无操作，连接断开的问题_windows原来有openssh,又安装了一个后,从linux ssh失败-CSDN博客\n如果不想每次都输入密码，尝试在vscode的config文件里添加下面的内容：\nIdentityFile C:\\Users\\你的用户名\\\\.ssh\\id_rsa （写在HostName和User的同级位置）\n并根据下面的教程生成id_rsa和id_rsa.pub文件：\nWindows 10 下生成 ssh 密钥_windows10 ssh密钥位置-CSDN博客\n接下来，将生成的id_rsa.pub文件的内容追加到服务器的/home/cuc305/.ssh/authorized_keys中（不要覆盖前面的，在下一行复制粘贴即可）\n​\t然后重新打开即可。\n校外连接 由于Wireless-CUC是校园网，局域网内部可以直接访问，当处在校园外时可以通过学校的VPN实现连接。VPN下载地址如下：\n中国传媒大学SSLVPN (cuc.edu.cn)\n连接方法如下：\n校外VPN (cuc.edu.cn)\n注：如果在Step2 首次填写地址处连接不上，尝试填写https://vpn.cuc.edu.cn/\n二、程序运行 服务器已安装anaconda，python版本为3.11，直接在命令行窗口运行即可\npython xxx.py 关于虚拟环境的建议 运行代码时最好在terminal中创建属于自己的虚拟环境，避免版本冲突，操作如下：\n创建指定python版本的虚拟环境，name自行指定\nconda create -n name python==3.xx 启动新创建的虚拟环境\nconda activate name 安装自己需要的库文件（大部分情况下不指定版本也没事）\npip install numpy==xxx.xxx networkx==xxx.xxx 运行代码\n确保运行时命令行首部为刚刚创建的环境name，如：\n三、本地大模型部署及调用(optional) ​\t目前服务器上部署了阿里的QWEN-7B大模型，功能比较初级。感兴趣的话可以在modelscope或huggingface上了解如何部署。调用方法如下：\n​\t模型位置：/home/cuc305/桌面/llm/\n​\t调用文件：qwen_generate.py\n​\t调用方法\nfrom qwen_generate import generate prompt = \u0026#34;\u0026#34;\u0026#34; (.................................) \u0026#34;\u0026#34;\u0026#34; answer = generate(prompt) ","permalink":"https://AquariniqueMu.github.io/posts/%E5%AE%9E%E9%AA%8C%E5%AE%A4%E4%B8%BB%E6%9C%BA%E8%BF%9E%E6%8E%A5%E4%B8%8E%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/","summary":"\u003cp\u003e2024/03/16 update：为方便后续的一些实验和工作，实验室的DELL Precision T3660服务器系统更换为Ubuntu 20.04。这里简单介绍一下服务器的远程连接与使用。\u003c/p\u003e","title":"实验室主机连接手册"},{"content":"陪家人前往临汾市洪洞县羊獬（Yo3 Hai1）村的唐尧故园，参观了一些古建，了解到一些羊獬村的历史和尧王传说，途中拍摄了一些复原古建筑的照片，感到比较值得记录。希望以后能收集更多地方的历史传说与影像。\n一、羊獬来历 “阳城周府（洪洞古为阳城，隋时始改今名，参见《洪洞县志》）。有一老者特来献宝，言说该村有一牧童放羊，羊群里有一母羊生了一只独角羊。这羊毛青，四足，性忠目直，见斗则触不直，闻论则咋不正，可谓神羊。”\n于是尧王带着妻子女皇（散宜氏的女儿）和女儿娥皇一同前往周府视察。大臣皋陶看了言道：“此乃祥兽，可谓国宝，我听仙家赤将子舆讲过，从前黄帝时就曾出现过一次，名叫‘獬豸’这只兽只有在仁德如天的国君掌朝时才会出现，如今第二次出现正是圣君大德所感……同时在朝内也可识奸忠，辨邪正……”帝尧到生獬处视察不胜惊奇，只不过一席之地，四周绿荫如织，独于这一小块寸草不生，久鱼不湿，片雪不沾。正在帝尧视察之际，妻子分娩，生下了女儿女英。出生三天，女英浩齿如鲜，自言自语，又过两天开始行走。尧王惊喜若狂，周府宝气十足，于是将周府改名羊獬，又迁居羊獬。\n​\t————百度百科：羊獬村\n二、三月三“接姑姑” 羊獬村有三月三庙会的传统，起源于“接姑姑，迎娘娘”的民俗，也与尧舜和娥皇女英的故事有关。没有见到今年的庙会，只摘录相关文字如下：\n尧年老时，四处访贤，最后选定舜作自己的继承人，并将二女娥皇、女英嫁于舜为妻。舜生在洪洞诸冯（今圣王村），后躬耕于历山，为历山人。因此，羊獬人称娥皇、女英二位女神为“姑姑”，历山人则称为“娘娘”。娥皇、女英在世时，每年的农历三月三日，都要到羊獬住娘家，直到四月二十八日后才回婆家。由于娥皇、女英德高望重，且平易近人，谦和卑下，人民衷心爱戴，直到她俩死去，人民还是念念不忘。每年农历“三月初三”，羊獬人吹锣打鼓，金牌銮驾前往历山接姑姑回乡省亲，四月二十八日，历山人又往羊獬接娘娘回家事舜。\n这种民俗一直延续下来，传承至今近5000年，并于2008年被列入我国非物质文化遗产名录。\n​\t————洪洞羊獬三月三“接姑姑”\n三、光影留念 ","permalink":"https://AquariniqueMu.github.io/posts/%E5%85%89%E5%BD%B1%E9%9B%86%E6%B4%AA%E6%B4%9E%E7%BE%8A%E7%8D%AC%E5%94%90%E5%B0%A7%E6%95%85%E5%9B%AD/","summary":"\u003cp\u003e\u003cstrong\u003e陪家人前往临汾市洪洞县羊獬（Yo3 Hai1）村的唐尧故园，参观了一些古建，了解到一些羊獬村的历史和尧王传说，途中拍摄了一些复原古建筑的照片，感到比较值得记录。希望以后能收集更多地方的历史传说与影像。\u003c/strong\u003e\u003c/p\u003e","title":"光影集：洪洞羊獬唐尧故园"},{"content":" 考研前鉴 《荀子·王霸》：“杨朱哭衢途曰：‘此夫过举跬步，而觉跌千里者夫！’哀哭之。”\n站在北京复兴门大街与西二环交叉的十字路口，向北约九公里可以到达北京邮电大学的西门，向东约十八公里可以直达中国传媒大学的南门，这里是从北京西站往返北邮的必经之路，但那些年在387路或694路上发呆的我不会想到多年后的某天，我将如此强烈地回忆起那个路口。\n2022年4月的一个下午，我收到了中国传媒大学的拟录取通知，在一个简短的电话和十几分钟的思考后，我点下了确认，于是两年的考研生涯就在这样一个安静的阳光明朗的下午结束了。那一瞬间我最先想起的是高中和同学扯淡时聊过的薛定谔的猫，我的生活的容器已经打开，但那只猫的状态如何，可能要两三年后才能观测到了。\n虽然很难像高分同学那样讲述如何“春风得意马蹄疾，一日看尽长安花”——我的经历更像是努力拼凑起支离破碎的信心，但两年来多少经历了许多事、踩了许多坑、也体验了许多选拔流程。因此，既是为了纪念我这两年以及过去五年的低谷，也为给后来人提供一些微小的参考，我写下了这篇考研前鉴。前鉴者，前车之鉴，不指望能当后车之师，能帮助后车少走弯路就是至善了。\n一、基本了解 基本条件是研究生入学前完成毕业，所以毕设和论文认真做，老师和学校不会难为本科生，但每年都有几个太糊弄导致被延毕的。 学硕与专硕：顾名思义，学硕偏向学术，专硕偏向专业应用。一般来说学硕难度较高，因为很多学校的学硕考数学一英语一，专硕考数学二英语二，但也有例外（如北邮专硕也考数一英一）。而且近些年越来越多以就业为目标的考生报考专硕，导致一些专业的专硕难度高于学硕。关于培养方式，原则上学硕和专硕有区别，例如学硕才能转直博、专硕在毕业前要给实习时间，但具体其实全看学校传统和导师要求。 全日制和非全日制：全日制就是默认脱产学习，非全日制多为在职人士准备。非全日制的实际情况一般分为两种：第一种是自己有固定工作，只是晚上或周末上课以及去跟导师学习；第二种是完全当作全日制安排，导师会要求平时也留在实验室做项目，有些会让挂靠在导师名下的公司。非全日制在近两年的一个变化是毕业时不能参加校招，因为校招相对社招比较宽松、不要求工作经验，因此这是个比较大的劣势。但也有非全日制期间导师放养四处实习的，这样毕业时也能找到很好的工作。总之非全日制能否过好全看导师人品和心情，国家或许有心提高非全日制地位，但目前还远未完成，谨慎选择。 考研复试是差额复试，比例一般为1.2-1.5，即如果招10人，会把分数线划到第12名或第15名。 34所自划线学校：有34所学校的复试线可以自己定，不用参考国家线，基本是985211院校。 A区B区：考研院校分为A区和B区，基本是按地理省份划分的，一些边远不发达省份会划分到B区，B区分数线比A区要低一些。 二、报名与时间安排 1、报名 预报名：考研预报名在九月份，不产生任何效力，只是一个练习和预备，正式报名时可以申请直接将预报名转为正式报名，可以避免报名人太多导致系统崩溃而打不开填写信息界面。但其实报名窗口期蛮长的，不用担心。 正式报名：正式报名在十月份，有二十天左右的时间，这个阶段就确定了自己报考的学校、学院、专业方向／实验室／课题组 报名确认：这个各省考区不一样，注意自己考区的通知，疫情后一般都是线上确认，往届生提前准备好证件照、户口文件照片、身份证、学位证书毕业证书等资料。确认有审核期，最好早点提交，以免审核不通过后来不及准备。 下载准考证：十二月十号后会逐渐开放准考证下载，在学信网报名界面下载即可。 2、流程 初试：一般在当年十二月底，没有意外的话就是十二月二十五到二十六号 出成绩：二月底会陆续出成绩，一些自命题的学校会稍晚两三天。 国家线：三月中旬左右会划定国家线，低于国家线的不可能有学校上，这个线是最起码的及格线。 复试：国家线公布几天后就会有一些比较早的学校公布校线和院线（清华一般都很早），并开始组织复试，其他学校一般在三月底到四月初会完成复试。 调剂：正式调剂在一志愿复试基本完成后进行，在学信网调剂系统报名申请。但其实很多学校、研究所和实验室会提前发布调剂信息，要求调剂考生先发送简历和成绩单，对审核通过的组织预调剂面试。预调剂一般开始很早，有些学校三月初就开始发布招收调剂的公告，如果对分数没把握可以早点关注这些信息。 录取通知：一志愿录取通知一般在调剂系统打开前就会公布，个别稍晚的会迟一到两天。调剂录取通知会先在学信网发送，考生确认后等待一周左右，学校会在官网公布调剂录取名单。 三、关于择校 虽然十月份才正式报名，但为了早点开始规划专业课复习，尽量在上半年想好自己要报哪个学校。而择校其实是一个相当复杂的问题，关键在于【你在追求什么】以及【你的规划是什么】。如果有dream school那就只管全力追梦，但如果还没想清楚，那可以先从城市、学校招牌和水平、自身能力、研究兴趣等方面，综合考量适合报哪些院校。如果是对自己专业的某一方面感兴趣，那就搜一搜哪些学校的哪些课题组的哪些老师在这个方向上比较强，可以看看对方这两年的论文发表情况、导师头衔等信息。如果更多是为了提升学历，那就尽量报考一个985或211的双一流专业。也要考虑自己的实力，不要盲目报考特别热门的学校或特别热门的方向，给自己上难度也要上得有意义。\n总之，最重要的是，选完就不要后悔和纠结了，不要在报名后想着别的城市别的学校，相信自己选的就是最适合自己的。还有一些注意事项我会列在下面：\n1、招生政策 报考前一定要熟悉报考院校的招生政策，尤其是分数算法、招生计划等信息。\n分数算法来说，绝大部分学校都是初始分数与复试分数以学校自己决定的方式加权相加，这个算法会决定初始和复试的影响权重。例如北邮信通院2022年的算法是【初试分数/5 *0.6 + 复试分数 *0.4】，这个比例意味着，初试分数的0.12倍等价于复试分数的0.4倍，即初试的8.3分相当于复试的2.5分，如果A初试分数比B高8分，B的复试分数比A高3分，那综合算下来就是B被录取。分数算法决定了学校对复试的重视程度，也意味着对学生的项目科研经历、学校背景、英语听说能力等的重视程度，复试权重越高，对背景和经历方面没有优势的考生越不利。个别学校会在初试与复试之间增加其他考试，如中国传媒大学的材料评议环节会与初试分数加权相加后决定是否进入复试，要好好准备自己的个人陈述与未来科研设想，但这种情况很少。\n招生计划一般会在九月份公布，如果学校没有改革的消息，基本不会与往年相差太多。招生计划中的方向划分、招生额度、考核参考书等信息比较重要，尤其方向划分，注意自己要报考的课题组或导师在哪个方向。\n2、经验帖 相对热门或招生人数较多的学校与专业一般都会有很多经验帖，分布在知乎、学校论坛、个人博客、考研QQ群等平台，备考前多找找经验帖，可以用于调整自己的复习计划、提高效率。\n3、研究院所 包括中科院和地方研究所在内的研究机构每年也会招收很多研究生，但相对高校来说都比较冷门，因为一则研究院多为纯粹学术机构，对学生的培养也以学术路线为主，如果毕业后想在社会上找工作可能要自己多努力一些，高校在秋招和春招会有很多公司去宣讲、发送内推码，研究院则相对较少。二则个别研究院对毕业生有合同限制，需要在所里工作一定年限，否则要支付违约金，虽然条件好些的会在期满后给户口等福利，但也有很多只是打工而已。不管是报考还是调剂，提前打听好该机构的政策和内部情况。\n4、一些避雷 由于地理位置的限制，一些高校招生比较困难，其中的个别几所近些年借着考研的热潮，形成了熟练的【打压一志愿 - 扩大调剂名额 - 接收优秀院校调剂考生】的套路。如广西大学，许多考生反应其刻意打压一志愿报考的考生，导致一志愿上岸率较低，从而为之后调剂阶段大量招收985211刷下来的调剂考生创造空间。对于这种院校报考时一定警惕，提前打听好学校考研口碑。\n​\n四、备考 接下来就就是最重要的备考环节，千言万语，终归要看你考了多少分，所以一定要早开始、早规划、多准备。以下我会从环境、心态、作息三个方面讲述备考状态，以及英语、政治、数学、专业课四个方面讲述考试内容学习。\n（一）备考状态 1、环境 备考环境看个人习惯，在家和在自习室都不错。我比较推荐找个自习室，这样可以强迫自己每天至少走走路运动运动，我就是运动量不够导致后期肠胃出现问题，十分难受。并且在自习室周围有人学习的话，也能起到督促作用。\n另外如果有一起备考的伙伴，可以一起建个群或者在番茄ToDo里建个自习室，互相提醒和鼓励。\n2、心态 在家备考，心态是很重要的一个因素。因为在你备考的期间，以往的同学可能已经开始了研究生或职业生涯，经常会发生朋友圈里有人热烈讨论新鲜的环境或快乐的度假，而你在发愁眼前解不出的题或背不完的概念，容易出现焦躁的心态。我的建议是找一些感兴趣的书籍或杂志，可以是科技新闻，可以是人文社科杂志，休息的时间看看那些让人震撼的工程或研究，如卫星发射、登月登火星、物理学新发现等等，可以让你短暂脱离眼前的现实，感受一些宏大的思绪。但总归还是看个人兴趣，找到一些能够调节情绪的东西就够了。\n3、作息 作息是很个人的事，早睡早起晚睡晚起各有各的说法，但一定要保证足够的睡眠，确保自己的学习时间里能够集中注意力。一天保持八个小时的专注学习完全足够，前提是你在这期间没有太多走神、困倦的情况。如果不是作息真的适应不了北京时间，我建议还是尽量十一点到七点左右。\n（二）内容复习 1、政治 复习方法\n政治复习一般来说不用花费太多时间，大部分人的主要复习内容就是过一遍徐涛课程，然后考前狂背肖四肖八，上了考场尽量往背的内容套。根据我和周围同学的经验，只要你有认真背书，这套方法至少能确保60分的保底分数，即使2022年考研政治这种被命题组反押题还用“必然与偶然”开全图嘲讽的特殊情况，把背的内容满满当当写上去也能确保政治不会拖你的后腿。当然最好还是认真思考和总结政治考点，考个70+不是坏事。\n徐涛的课程主要是有趣且系统，他会以比较有趣和印象深刻的方式给你解释那些枯燥的文字概念该如何理解、遇到一些经典问题该如何作答。即使有些概念的解释我并不完全同意，但完全不影响考试，跟着他的课程可以把所有重要考点都过一遍，搭建起考研政治的基本知识框架。所以我强烈建议至少认真过一到两遍徐涛的课程，期间把每个章节的每部分重要内容做个归纳。\n时间安排上，如果前期很闲的话可以早点看看徐涛课程，如果上半年正式开始准备英语和其他科目的话就把政治往后放一放，我建议七月份开始准备政治。徐涛的课程结合肖秀荣1000题比较不错，不要把时间花在主观题上，这段时间就主要刷选择题，刷完肖秀荣1000题再去刷往年真题，刷完总结总结错题和易错知识点就差不多了。等到肖秀荣八套卷四套卷出来后一定要买，刷完里面的选择题，之后最重要的是考前要坚持把肖四的简答题背完。另外，还是要强调基础概念要明晰，听课过程中要认真听认真思考，听完总结框架和重要知识点，因为肖秀荣名声在外，出题组有时候可能会反押题嘲讽一下，这种情况下要做到在肖四之外也能写出一些重要知识点。\n考试内容\n内容方面，考研政治分为马克思主义原理、毛泽东思想与中国特色社会主义理论、近代史纲要、思想道德修养与法律基础、以及时事政治五大部分。\n第一个最重要的内容是马原，这部分无论形势怎么变都是要考的，重要概念如辩证法一定要熟悉，例如必然与偶然的关系，即使肖秀荣四套卷没有预测到，但给你一个非常基础又重要的题目一定要能说出些东西来。马原又分为马克思主义哲学、马克思主义政治经济学和科学社会主义。马哲是重点中的重点，政经把概念背熟、弄明白一些重要概念和公式（如不变资本与可变资本、绝对/相对/超额剩余价值、剩余价值与利润的关系）。 另一个最重要的内容是毛中特，尤其是中特理论和这些年的发展，国家近几年提出的一些重要概念和思想要点一定要背熟。毛中特的考试内容每年会根据国家理论进展有一定调整，徐涛、腿姐、空卡等机构会及时更新，要保持关注。 史纲，重要的历史著作的时间与影响（如德意志意识形态、共产党宣言、资本论）、历史文件（如十一届六中全会的决议）、历史会议（如八七会议、遵义会议、瓦窑堡会议、洛川会议、建国后的一系列重要会议）要背熟，特别是我国和我党史上的重要会议及会议成果与影响要列出来分清楚。 思想道德与法律基础，这部分没啥说的，就是背熟，法治方面喜欢考国家对法治的指导思想和方针，背熟就行。考试前一个月腿姐和肖四肖八都可以多背背，高频考点一定要背熟，政治能考的内容真不多。 时事政治一般会在单选最后一两道题考，其他时候会在主观题作为材料的形式出现，但基本不会影响作答。备考时记得关注国家大型活动，后期背背相关机构整理的重点。 推荐机构\n考研政治徐涛：考研政治课程指定推荐人，跟着他的课程的人是最多的\n考研政治陆寓丰：腿姐，后期背诵提纲和资料尤其时政方面可以用她的\n空卡空卡空空卡：好像是去年热门的带背up主，可以看看她的考研复习规划，以及后期带背肖四肖八的视频，可以提高一点效率\n文件下载\n由于我的移动硬盘在过年那段时间莫名其妙坏掉了，很多当时的题集课件等资料找不到备份，只有存在云盘里的资料还能取出来。早期听课时我在OneNote里记录了一些政治课的重点内容，当时我是一边在电脑里记录一边在纸质书上写写画画，所以电脑这边的知识点并不全，仅仅做个参考，最好还是自己多总结。\n考研政治早期笔记\n2、英语 英语的语感很重要，我两次英语都是七十多分，靠着语感答题，备考期间真正花费的精力不多（但不鼓励这样做:D）\n前期（上半年）复习\n前期最重要的是打基础，即单词和语法，如果语感不错可以缩短甚至跳过这个阶段，否则还是多花些心思看完语法，不求完全分析透彻语法的成分和逻辑，至少要做到看到一个语法大概知道在表达什么。如果觉得自己英语语法比较差可以看看刘晓艳的课，如果稍好一些自己复习也没有问题。\n单词推荐朱伟的恋恋有词或者红宝书，恋恋有词比较好。单词一定要早点开始，看课程帮助有限，只能留个印象，后期没有那么多时间给你背大量单词，最好在前期多背一些，结合做阅读理解或练长难句的过程记单词，每天都抽些时间背，趁着时间充足多背背。\n阅读理解非常非常考验语感，前期非常推荐唐迟的课程，我自己阅读能力比较强没有用他的，但很多同学反应不错，如果阅读方面需要提高可以多听听。\n上半年时间比较多的情况下，每天做做阅读理解的练习，一方面记一些生词和长难句语法，一方面保持自己的语感，同样建议跟着唐迟的课程，有不懂的自己查查或者看他的解析。\n中期复习\n在中期前要过完语法，单词继续保持每日背诵 继续保持每天练习阅读，跟着唐迟的安排就足够了 这时候可以开始准备作文，作文基本都需要背熟几篇模板，基础差可以看看石雷鹏的课程，基础好可以自己准备，从托福雅思里找固定表达也可以。考研英语的大小作文有多种形式，建议每种重要形式都至少准备一篇模板，并多准备一些固定表达，要做到能直接写出来。 后期复习\n继续保持练习阅读 翻译感觉不需要怎么准备，长难句和单词复习好了就不难，想听听课程的话可以看看唐静老师，这方面不用花太多时间 完形填空同样不需要花太多时间，基本方法高中都练得差不多了，单词和词组复习好了就不会有大问题。课程方面可以看看宋逸轩老师，这部分主要刷刷往年真题和一些练习题就足够，关键在基础。 这段时间，特别是比较后期的时候，每两天左右可以练练作文，熟悉模板的同时保持手感 考研英语有很多视频博主和公众号在做，上面推荐的唐迟的阅读课和石雷鹏的作文课建议基础差的多看一看，我在后期看到b站有个叫做鸟山学长的up主也做了很多考研英语政治规划的视频，可以多看看作为参考，具体怎么安排还是看自己的英语水平和学习习惯，没有固定的答案，但早做准备肯定没错的。up主和老师们的链接我发在下面，其中大部分也有自己的公众号，记得多看看：\n考研英语于杉老师\n刘晓艳老师\n石雷鹏老师\n唐迟老师\n鸟山学长\n此外还有一个我当时准备的模板等文件，感谢＠wyx提供的帮助。最后主要用到的是其中的一些固定表达，可以只看看作为参考：\n写作模板下载\n3、数学 我的数学考得不好，所以这方面可看可不看，只是一些基本的方法和经验。\n考研数学的内容分为高数、线性代数和概率论。一般复习都是分基础课、强化、刷题和冲刺，具体时长和安排看个人水平，基础差的最好三四月份就开始，整个暑假的主要时间用来复习数学也不为过，基础不错的稍晚三四个月也没事。高数解题手感很重要，因此最好保持长期且稳定的日常练习，每天都做做题会很有帮助。\n考研数学比较出名的老师有李永乐、张宇、武忠祥等，我备考期间对他们三个人的课程和教材都有所了解，也做了一些总结。\n教材方面，我比较推荐李永乐的复习全书，数学的内容都是固定的，就那么些公式和套路，但李永乐的书一则排版更顺眼，二则内容比较密集，如果有一定的基础，他的书非常适合当一本工具手册来用。 课程方面，张宇的比较热门，适合有一定基础和理解的同学，但有些地方可能讲得不清楚，建议搭配汤家凤和武忠祥的课程。武忠祥的水平个人认为好一些，但可能没有张宇的那么容易听进去，早期可以几个老师的都听一听，选一个听着顺耳的跟着就行。讲课只是辅助，能听进去就足够，重点还是自己对知识的理解。来得及的话，最好在夏天结束前过完基础课和强化课，并开始集中精力刷题。 题集方面，李永乐的660题，汤家凤的1800题，张宇的1000题，看你听哪个老师的课程，可以选配套的题集，张宇的1000题用的人最多，可以搭配他的十八讲使用。做题一定要坚持，一开始可能很多不会的，给自己限定个时间，如果十分钟还想不出来怎么做就去看答案，但不要只抄答案，这里没人给你打分，答案是用来研究的，要弄明白答案为什么这么解、用了什么知识，然后自己再解一遍。做数学题时不要空耗时间，也不要毫无收获就跳过一道题。另外真题很重要，刷完考研机构的练习题后就可以刷真题，至少得刷两遍，第一遍把所有题过一遍，第二遍针对错题重点研究。错题本很重要，典型的错题要记录下来，考前复习效率会很高。 模拟题一般在十一月到十二月中旬陆续发布，记得买几套，李林、张宇、李永乐武忠祥还有其他几家机构的都可以，不能指望押题，重要的是保持手感，查缺补漏。 以下是除了张宇汤家凤武忠祥等几位老师外，我觉得非常有帮助的b站up主和老师，特别是后期做预测题时他们会出讲解视频，实在做不出来的时候可以看看：\n考研数学李艳芳\n没咋了\n吃尽天下面\n总之，如果你的考研科目有数学，一定要确保足够多的时间准备，如果能全面梳理知识点、做完足够的练习题、针对易错点查缺补漏，分数不会低的。\n4、专业课 我的专业课是801通信原理，总的来说其实不难，特别是有雪山灰虎的辅助，考801的几乎都买了灰虎的课和资料，跟着灰虎的安排就够了。\n复习资料方面，就是周炯磐老先生的《通信原理》以及北邮几位教授的课件讲义，我的建议是在秋天前把书和课件讲义过一遍，梳理好知识体系。然后就刷雪山灰虎的模拟题，过完知识点和练习题后，一定要把往年真题都刷两遍，至少过去五到十年的题都要熟悉。十一月灰虎会出预测题，跟着刷就行了，通信原理能考的内容也挺固定的，基础概念要背牢，调制系统、量化、编码等方面的解题方法要练熟。我个人觉得难度远不如数学，几套真题弄明白了就可以解大多数题，重点还是概念要熟悉，毕竟客观题分值不少，考的内容繁杂，多背多记就问题不大。\n相关文件灰虎网站都有，这里我只分享一下杨鸿文老师的讲义，非常详实。\n杨鸿文老师通信原理讲义下载\n此外还有当时我在MarginNote 3里做的思维导图，只适合搭配教材电子版在MarginNote里使用，看看就行。\n通信原理知识点思维导图\n五、复试 初试过后就可以开始准备复试了，不要觉得只是走个流程，复试相当重要。前面的分数算法部分提到过，在综合分数算法里，复试分是很重要的一部分，而且很多老师打分相当主观。有400+的同学专业知识全都没答完，也能拿80分顺利上岸；也有考了390+，因为复试表现太差，被老师打了60多分，导致最终落榜。总之，不管分数高低，复试都要好好准备，高分避免太差被刷，低分努力尝试复试逆袭。\n1、复试形式与内容 常见的复试形式是【英语自我介绍+口语问答】+【专业知识提问】+【本科项目与科研经历】。\n首先基本都是英语自我介绍开场，然后一位老师口述一两道英语问题，考生作出英语回答。\n接下来就是让考生随机抽取一套题，老师念每道题的题目，或者由复试秘书展示题目内容，考生确认题目后作答。\n最后就是老师会问关于背景的内容，我在每次面试中都被问到了毕设内容，一些学校会在此之外多问一些。\n这两年由于疫情，复试基本都在线上进行，所以提前准备好双机位和腾讯会议、钉钉等工具软件。\n2、复试准备 英语方面，自我介绍尽量控制在两分钟左右不超过三分钟，语速正常的话220-280词左右就足够。内容上，姓名年龄毕业院校作为开头，然后可以重点讲讲自己的专业相关的经历（科研经历、项目经历、实习经历、论文经历）、学到的知识与方法、为什么考这个方向等，兴趣与爱好有余裕的话可以提一嘴，没有也不影响。自我介绍是最容易准备的，建议初试完就开始写，最好背到可以随口大声背完不卡壳。发音可以不标准，但一定要声音洪亮、不卡顿，尤其不要说一半想不起来然后就停在那里，想不起来赶紧跳下一个段落，全想不起来就直接\u0026quot;That\u0026rsquo;s all about my self-introduction. Thanks for your attention\u0026quot;，千万千万千万不要冷场。问答方面可以问问往年考生的经验，一般无非是喜欢的书、运动、季节天气、老师、课程；介绍家乡、家庭；自己的性格；为什么选择这个专业、毕设简介（很少问这个）等等，针对这些问题做好模板回答并背熟，b站也有很多老师提供参考。如果问到准备的内容之外的话题也不用急，先请求三十秒组织语言（用英语），然后慢慢根据背的内容尽量说一说，跑题也没关系，关键是不要冷场，只要流畅说完，跑题也有分，冷场是容易被打低分的。有些学校会问英语专业题，如果往年有过的话可以了解了解一些重要专业名词的英语翻译。我之前简单准备了一些英语问题的回答，贴在下面，可以作个参考。\n复试英语问题简略\n专业知识方面，就是重要考点背熟，如果问到了不熟悉的内容也首先表示自己不是很熟悉，然后根据自己的知识谈一谈对这个问题的理解，不要不懂装懂，老师对这些基础概念再清楚不过，与其瞎猜不如诚恳一些再好好分析一下。实在说不出来也可以先表示歉意再说自己计划如何学习和解决这个问题。一定不要什么也不说，冷场是最差的情况。同样，初试过后就可以开始准备这方面的内容，多背背概念性的内容。\n本科项目与科研经历。我的每次面试都被问到了这个问题，这个是综合面试阶段的重要内容。有些学校复试前会要求发送简历给复试秘书，可以提前做好一份包含自己本科成绩与获奖情况、学生工作、实习经历、项目经历、论文经历、社会实践和技能的简历，把重要项目或经历和毕业论文写在比较靠前的地方。特别是毕业论文，一定要做到很熟悉，能流利地说出研究背景、研究目的、研究方法、创新点和最终结论，表明自己确实有在认真做毕业论文并且从中学到了一些基础的学术技能，这是老师直接评估一个学生研究能力和态度的过程。有些学校比较看重综合面试，问的问题比较多，可以看看报考的研究方向的导师们最近发表了哪些论文，用到了什么方法，主要解决了什么问题，也多看看该领域的前沿发展动态，最好能自己想一个比较粗糙的科研构想，让老师知道自己已经准备好做学术研究。\n复试前准备一个足够安静简洁的环境。有不少同学选择去附近的酒店。在家备考的话提前确认电量和网络没问题，并且找个合适的侧后方二机位。复试前清空周围的书和设备，不要留下任何有嫌疑的东西。并且记得和家人或酒店工作人员沟通好，在可能的复试时间内一定一定一定不要进入房间或发出太大的声响，否则可能会导致直接取消复试资格或打零分。\n着装方面，整洁干净即可，服装不要太花哨，简单一些。早上可以洗个澡，整理好发型，期间坐姿端正不要有多余动作，说话时眼睛看着屏幕或镜头，不要躲闪。复试前可以找一起考研的同学互相模拟面试，既可以通过互相提问查缺补漏，也能在复盘时总结自己的不足，加以改进。我在正式面试前和同学组织了两次模拟面试，作用还是非常大的。\n六、调剂 如果不幸走到了调剂这一步，一定要早做准备。\n首先，努力收集信息。在出分数线到正式开始调剂的一段时间里，会有许多院校和研究所提前发布招收调剂的信息并要求邮件发给他们考生的个人资料，如兰州大学几乎在初试不久后就发布了预调剂意向调查。一般这类消息会发布在专业主流论坛、小木虫、学校官网、学校论坛等地方，保持对这些信息的关注，及时报名。这些院校会在调剂开始前组织面试，如果通过就相当于预录取，之后的调剂只要表现别差到离谱，基本就是走个流程。\n其次，调剂系统打开后，考生可以申请发布调剂名额的符合条件的学校，流程是【申请】-【锁定】-【院校查看信息】-【发送复试通知（或拒绝）】-【发送待录取通知（或拒绝）】，每个人同时会有三个申请名额，申请后会锁定一段时间，解锁后才能继续申请别的学校。大多数学校的调剂只开放十二到二十个小时，而有些锁定时间会长达三十六个小时，所以慎重选择第一批申请调剂的学校，如果迟迟没有查看或进一步消息，及早打电话给该校研招办要求解锁，好给下一个申请腾位置。如果有学校通过预调剂申请并发送复试通知，尽快了解下该学校的复试流程、录取偏好，有些学校会有独特的环节，如中国传媒大学的调剂考生不需要像一志愿考生那样提交材料评议，但复试环节仍会问到你的科研设想。如果目标院校的复试科目与所学的科目相差甚远，也不要怕，学校也清楚跨专业调剂的含义，尽量了解了解基础概念就可以，把自己的专业科目准备好。此外找找调剂方向的学长学姐多问问，不要怕被拒绝，语气客气一些，很多学长学姐是非常愿意帮忙的。\n最后，调剂系统开放后一定要注意院校的备注，很多学校开放系统是为了预调剂通过的考生走个流程，或者要求只能一志愿报考该校的考生申请，一般都会写在调剂要求中，注意不要为这些学校耽误调剂名额，不小心填了也及时给对方研招办打电话请求解锁。在调剂的最初一两天内保持关注调剂系统，复试通知会有时限，要求在几个小时内确认，不要错过了。\n七、工作 / 出国 人生的选择很多，考研不是唯一的路径，如果十二月底考试后觉得非常糟糕，可以提前开始准备工作或出国。\n1、工作 工作方面，虽然有些公司对应届生政策阳奉阴违，但仍有不少公司是承认一年应届身份的，尤其是国企和公务员考试。如果决心找工作，多关注春招和省考信息，及早准备。此外，根据我今年二三月份向互联网公司投递简历的经验，毕业一年内只要还没交过社保，参加大部分公司的春招是没有任何问题的，关键还是找内推+能力，如果想进入互联网公司的技术岗，首先找找校友的内推，然后基本的数据结构算法、排序算法、经典编程题目都要好好准备，leetcode的基础题和medium类型的题都练练，一些大公司的面经会很多，也都看看，即使做不到完全ac，也很有可能获得面试机会，校招的容错率还是远高于社招的。所以如果要工作，一定利用好校招的机会。\n2、出国 出国方面，如果英语够好可以自己DIY文书，这也是一个锻炼写作能力和信息检索能力的机会，如果比较忙或者没有心情自己准备，交给中介是比较稳妥的办法。但也要对自己的综合情况有认知，中介的水很深，有些会刻意压低学生的期望以图业绩稳定，甚至有些学校是会给中介回扣的。可以在学校论坛、一亩三分地、寄托等平台查找类似背景的帖子或自己发帖，对自己的能够申请哪些国家、哪些排名的学校要有个基本认识，免得被坑。\n文书方面，主要的材料就是CV（Curriculum Vitae，简历、学术履历），PS（Personal Statement，个人陈述），RP（Research Proposal，研究计划，一些研究型硕士会需要提供），Certificate（学位证书原件及公证处翻译版、学位网申请的学位认证报告及翻译版），Transcript（成绩单原件及学校或公证处的翻译版），RL（Recommendation Letter，推荐信，一般需要两封）。CV和PS是主要内容，CV可以找个国外著名大学的团队网站（如普林斯顿），上面会有学生的个人简历，对照着格式写就行了，注意突出重点，语言简洁。PS要写清楚自己对这个专业的实践经历及认知、为什么要申请该校、所申请的学位关联的资源能够如何帮到自己等内容，这方面可以找有经验的学长学姐，最好是类似专业类似国家的前辈。PS写好后可以在fiverr上找个英语母语或有类似专业背景的外国人帮忙修改润色，一亩三分地上有fiverr的售后评价和推荐，可以在里面挑评价好的。推荐信最好一封授课老师的，一封学术导师的（一般就是毕设导师），有微信可以微信问，没有就发邮件，语言礼貌客气一些，多问问，不要怕拒绝，十几封信投出去只有一两封回信都很正常，即使拒绝了也不亏什么。大学老师的日常工作就包括给学生写推荐信，这是很正常的事，所以不觉得给老师添麻烦，这都是学校里的正常事务。\n准备好文书后，记得及早提交，香港地区和英国的院校是滚动录取，先到先得，申得早结果出得也早。没有语言成绩也没关系，很多学校愿意给conditional offer，也就是条件offer，等你语言成绩过关了再提交证明可以转为正式offer，即使开学前达不到，有些学校也可以申请defer到下个学期或者上语言班。\n八、题外话 高中之后，生活就不像以前那样一条路往下走即可，需要自己考虑往哪个方向走、该怎么走。研究生备考期间是一个非常好的冥想机会，可以在学习之余探究探究自己想要什么。互联网发展到现在，绝大部分的考试和路径都有无数前人总结好的信息和规划，到处都是答案，但关键在于寻找问题。\n最重要的是直视自己的内心，想想自己为什么考研，自己到底在追求什么。是有某个感兴趣的研究方向？还是希望提升自己的学历，寻求一个更光鲜的头衔？或者仅仅是目前没有中意的工作单位，希望读研缓冲两三年？又或有读博的梦想、走选调的规划？考研不仅仅是选择一个学校再读几年，你选择的学校、城市、专业、导师，都会深刻地影响你未来的人生，因此不要轻率地走进这个角斗场。当你想清楚、做了决定，希望你不要后悔，相信自己的判断，不要被其他的选择和其他人的人生干扰，各奔前途的日子里难免乱花渐欲迷人眼，但你只需要找到自己的那一条小路就足矣。\n等待北邮复试的那段时间里，舍友分享了一位清华电子系考生的感想总结，我非常喜欢其中的一个故事：有一位曾经的清华828信号与系统考研前辈，出了一份模拟题，其中有一道小题非常复杂难算，但这位前辈给的答案是空白满分，因为他希望考生能够及时识别注定做不出来的题并果断放弃，不要在这上面空耗时间。中学时大家应该都听了无数次老师说“不会的题先放过”，这是非常高深的道理，不止是考场上，人生也一样，学会放弃，学会专注自己能做出的题目。当你站在毕业这个人生的十字路口，车水马龙人潮汹涌，四面八方都是延展到看不见尽头的路，但你只能选择其中的一条，以前你可能觉得年轻人一腔热血年华大好，但在这个当口，注意谨慎地选择你将把时间消耗在哪个方向，学会选择，也要学会放弃。《荀子》里提到，杨朱站在十字路口大哭，说“此夫过举跬步，而觉跌千里者夫”。十月份确认报名时鼠标点击的那一下只是一个微弱的电信号的传导，更是你在人生的十字路口迈出的半步，可能要到多年后你已行过千里路，才能明白那一天的选择意味着什么，但至少在当下，用审慎的态度对自己负责。总之，直视自己的内心，以及，选择了就不要纠结，血要热，心要静，手要稳，全力准备十二月的考试吧。\n​\n","permalink":"https://AquariniqueMu.github.io/posts/%E8%80%83%E7%A0%94%E6%80%BB%E7%BB%93/","summary":"\u003cp\u003e\u003cimg loading=\"lazy\" src=\"../pic/%e8%80%83%e7%a0%94%e6%80%bb%e7%bb%93/highway.jpg\" alt=\"Once you have chosen the road of life, you have to be brave enough to go to the end and never look back.\"  /\u003e\n\u003c/p\u003e\n\u003ch1 id=\"考研前鉴\"\u003e考研前鉴\u003c/h1\u003e\n\u003cblockquote\u003e\n\u003cp\u003e《荀子·王霸》：“杨朱哭衢途曰：‘此夫过举跬步，而觉跌千里者夫！’哀哭之。”\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e站在北京复兴门大街与西二环交叉的十字路口，向北约九公里可以到达北京邮电大学的西门，向东约十八公里可以直达中国传媒大学的南门，这里是从北京西站往返北邮的必经之路，但那些年在387路或694路上发呆的我不会想到多年后的某天，我将如此强烈地回忆起那个路口。\u003c/p\u003e","title":"考研经验与回顾"},{"content":"","permalink":"https://AquariniqueMu.github.io/about/","summary":"about","title":"About Me"}]